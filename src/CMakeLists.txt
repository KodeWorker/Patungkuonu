PROJECT(${PROJECT_NAME} VERSION 0.0.1)

FILE(GLOB SRC 
    ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/*.cc
    ${CMAKE_CURRENT_SOURCE_DIR}/*.hpp
    ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

FILE(GLOB HEADER 
    ${ROOT_PROJECT_DIR}/include/*.hpp
    ${ROOT_PROJECT_DIR}/include/*.h)

SOURCE_GROUP(src FILES ${SRC})
SOURCE_GROUP(include FILES ${HEADER})

INCLUDE_DIRECTORIES(${ROOT_PROJECT_DIR}/include)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRC} ${HEADER})

ADD_SUBDIRECTORY(${ROOT_PROJECT_DIR}/3rdparty/SDL ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/SDL)
ADD_SUBDIRECTORY(${ROOT_PROJECT_DIR}/3rdparty/SDL_image ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/SDL_image)
ADD_SUBDIRECTORY(${ROOT_PROJECT_DIR}/3rdparty/SDL_ttf ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/SDL_ttf)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE SDL2 SDL2_image SDL2_ttf)

IF (WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE SDL2main)
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES OUTPUT_NAME lib_${PROJECT_NAME})
ENDIF ()

ADD_DEFINITIONS(-DBUILDING_DLL)

INSTALL(TARGETS ${PROJECT_NAME} 
        RUNTIME DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
        LIBRARY DESTINATION ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        ARCHIVE DESTINATION ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})