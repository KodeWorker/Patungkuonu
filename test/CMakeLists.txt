PROJECT(${PROJECT_NAME}_test)

FILE (GLOB SRC
	${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/*.c
	${CMAKE_CURRENT_SOURCE_DIR}/*.hpp
	${CMAKE_CURRENT_SOURCE_DIR}/*.h
    ${ROOT_PROJECT_DIR}/src/*.cpp
	${ROOT_PROJECT_DIR}/src/*.c
	${ROOT_PROJECT_DIR}/src/*.hpp
	${ROOT_PROJECT_DIR}/src/*.h
)
LIST(REMOVE_ITEM SRC REMOVE_ITEM ${ROOT_PROJECT_DIR}/src/engine.cpp) # Remove root project included source file

SOURCE_GROUP(src FILES ${SRC})

ADD_SUBDIRECTORY(${ROOT_PROJECT_DIR}/3rdparty/googletest ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/googletest)

ENABLE_TESTING()

INCLUDE_DIRECTORIES(${ROOT_PROJECT_DIR}/include)
INCLUDE_DIRECTORIES(${ROOT_PROJECT_DIR}/src)
ADD_EXECUTABLE(
	${PROJECT_NAME}
	${SRC}
)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${ROOT_PROJECT_NAME} 
                      gtest gtest_main gmock_main  # Google Test
                      SDL2 SDL2_image SDL2_ttf # SDL2
                      )

ADD_TEST(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME})

INSTALL(TARGETS ${PROJECT_NAME} 
        RUNTIME DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
        LIBRARY DESTINATION ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        ARCHIVE DESTINATION ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

IF (WIN32)
ADD_CUSTOM_COMMAND(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_RUNTIME_DLLS:${PROJECT_NAME}> $<TARGET_FILE_DIR:${PROJECT_NAME}>
    COMMAND_EXPAND_LISTS
)
ENDIF ()